# SPDX-License-Identifier: Apache-2.0
# Copyright 2025 Latchfield Technologies http://latchfield.com
name: CI Publish
run-name: Publish of ${{ github.ref_name }} to ${{ inputs.environment || 'test.pypi.org' }} by ${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "PyPI Environment"
        required: true
        default: "test.pypi.org"
        type: choice
        options:
          - test.pypi.org
          - pypi.org
      skip_cache:
        description: "Skip Commit SHA Cache"
        required: true
        default: false
        type: boolean

concurrency:
  group: publish-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepublish:
    name: Prepublish Checks
    runs-on: ubuntu-22.04
    outputs:
      build-cache-hit: ${{ steps.build.outputs.cache-hit && !inputs.skip_cache }}
      repo_name: ${{ steps.config.outputs.repo_name }}
      project_name: ${{ steps.config.outputs.project_name }}
    steps:
      - name: Sparse checkout codebase
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          sparse-checkout: "pyproject.toml"
          sparse-checkout-cone-mode: false

      - name: Validate configuration
        id: config
        run: |
          # Sanity check that the environment is in the inputs
          if [[ -z "${{ inputs.environment }}" ]]; then
            echo "::error::PyPI environment input variable not set."
            exit 1
          fi

          # Ensure we are operating on a version tag
          if [[ "${GITHUB_REF}" != refs/tags/v* ]]; then
            echo "::error::Publishing must be done from a version tag."
            exit 1
          fi

          # Ensure the version in pyproject.toml matches the git tag
          GIT_TAG_VERSION=${GITHUB_REF#refs/tags/v}
          PYPROJECT_VERSION=$(grep -Po '(?<=^version = ")[^"]*' pyproject.toml)
          if [[ "${GITHUB_REF#refs/tags/v}" != "$PYPROJECT_VERSION" ]]; then
            echo "::error::Version mismatch! Git tag ($GIT_TAG_VERSION) doesn't match pyproject.toml version ($PYPROJECT_VERSION)"
            exit 1
          fi

          # Output variables not available in the actions context
          PYPROJECT_NAME=$(grep -Po '(?<=^name = ")[^"]*' pyproject.toml)
          echo "repo_name=${GITHUB_REPOSITORY#*/}" >> $GITHUB_OUTPUT
          echo "project_name=${PYPROJECT_NAME}" >> $GITHUB_OUTPUT

      - run: ls -la

      - name: Lookup build cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 #v4.2.3
        id: build
        with:
          lookup-only: true
          path: ./dist
          key: build-${{ github.sha }}

      - name: Evaluate cache status
        run: |
          if [[ "${{ steps.build.outputs.cache-hit }}" = "true" ]]; then
            echo "::notice::Skipping rebuild due to cached build result for this commit."
          fi

  rebuild:
    name: Rebuild
    needs: prepublish
    if: ${{ needs.prepublish.outputs.build-cache-hit != 'true' }}
    uses: ./.github/workflows/ci-build.yml
    with:
      skip_cache: ${{ inputs.skip_cache }}

  publish:
    name: Publish Packages
    runs-on: ubuntu-22.04
    if: ${{ !failure() && !cancelled() }}
    needs: [prepublish, rebuild]
    # Doesn't seem useful for packages, adds noise, and apparently old deployments are not easy to remove
    # environment:
    #   name: ${{ inputs.environment }}
    #   url: https://${{ inputs.environment }}/p/${{ needs.prepublish.outputs.project_name }}
    permissions:
      id-token: write # Needed for trusted publishing
    steps:
      - name: Restore build cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 #v4.2.3
        id: build
        with:
          path: ./dist
          key: build-${{ github.sha }}
          fail-on-cache-miss: true

      # TODO: Add test reports, etc to artifacts
      - name: Store artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 #v4.6.2
        with:
          name: ${{ needs.prepublish.outputs.project_name }}-${{ github.ref_name }}
          path: ./dist
          if-no-files-found: error

      - name: Publish package distributions to PyPI
        if: ${{ !env.ACT }}
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc #v1.12.4
        with:
          repository-url: https://${{ inputs.environment }}/legacy/
